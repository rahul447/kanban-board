{"ast":null,"code":"import _objectWithoutProperties from \"/Users/rkhanna/Desktop/react-codesandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/rkhanna/Desktop/react-codesandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/Users/rkhanna/Desktop/react-codesandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/rkhanna/Desktop/react-codesandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"cardRows\"];\n\nvar _jsxFileName = \"/Users/rkhanna/Desktop/react-codesandbox/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.scss\";\nimport Modal from \"react-modal\";\nimport AddCard from \"./AddCard\";\nimport React, { useEffect, useState } from \"react\";\nimport { customStyles } from \"./Configs\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { cardsMock } from \"./Configs\";\nimport Cards from \"./Cards\"; // const tagsList = [{ label: \"iOS\" }, { label: \"Android\" }, { label: \"Windows\" }];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalIsOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchVal = _useState4[0],\n      setSearchVal = _useState4[1];\n\n  var _useState5 = useState(cardsMock),\n      _useState6 = _slicedToArray(_useState5, 2),\n      visibleCards = _useState6[0],\n      setVisibleCards = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tagsList = _useState8[0],\n      setTagsList = _useState8[1];\n\n  useEffect(function () {\n    var tagsSet = cardsMock.reduce(function (acc, _ref) {\n      var cardRows = _ref.cardRows;\n      cardRows && cardRows.length > 0 && cardRows.map(function (_ref2) {\n        var cardTags = _ref2.cardTags;\n        return cardTags.map(function (_ref3) {\n          var title = _ref3.title;\n          return acc.add(title);\n        });\n      });\n      return acc;\n    }, new Set());\n    var tagsList = [];\n\n    var _iterator = _createForOfIteratorHelper(tagsSet.values()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n        tagsList.push({\n          label: value\n        });\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    setTagsList(tagsList);\n  }, [cardsMock]);\n\n  var setSearchState = function setSearchState(event) {\n    setSearchVal(event.target.value);\n  };\n\n  var openModal = function openModal() {\n    setIsOpen(true);\n  };\n\n  var afterOpenModal = function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  };\n\n  var closeModal = function closeModal() {\n    setIsOpen(false);\n  };\n\n  var renderTagsFilter = function renderTagsFilter() {\n    return /*#__PURE__*/_jsxDEV(Autocomplete, {\n      disablePortal: true,\n      id: \"select-tag\",\n      options: tagsList,\n      sx: {\n        width: 100\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: \"Tags\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 34\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var filterSearchResults = function filterSearchResults(event) {\n    if (event.key === \"Enter\" && searchVal) {\n      var filteredCardsMock = cardsMock.map(function (cardMock) {\n        var cardRows = cardMock.cardRows,\n            rest = _objectWithoutProperties(cardMock, _excluded);\n\n        console.log(\"cardMock :\", cardMock);\n        console.log(\"cardRows :\", cardRows);\n        var modifiedCardRows = cardRows && cardRows.length > 0 ? cardRows.filter(function (_ref4) {\n          var cardTitle = _ref4.cardTitle,\n              cardDesc = _ref4.cardDesc,\n              cardVersion = _ref4.cardVersion;\n          return cardTitle.includes(searchVal) || cardDesc.includes(searchVal) || cardVersion.includes(searchVal);\n        }) : cardRows;\n\n        var modifiedMock = _objectSpread(_objectSpread({}, rest), {}, {\n          cardRows: modifiedCardRows\n        });\n\n        return modifiedMock;\n      });\n      console.log(\"filteredCardsMock :\", filteredCardsMock);\n      setVisibleCards(filteredCardsMock);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kanban Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-tags-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"search this board\",\n          name: \"search\",\n          value: searchVal,\n          onKeyDown: filterSearchResults,\n          onChange: setSearchState,\n          o: true,\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-search search-icon\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), renderTagsFilter()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        cardsMock: visibleCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onAfterOpen: afterOpenModal,\n      onRequestClose: closeModal,\n      style: customStyles,\n      contentLabel: \"Example Modal\",\n      children: /*#__PURE__*/_jsxDEV(AddCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"yDPA/TZeKT26AF2hEzn+pPVVmkU=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Modal","AddCard","React","useEffect","useState","customStyles","Autocomplete","TextField","cardsMock","Cards","Dashboard","modalIsOpen","setIsOpen","searchVal","setSearchVal","visibleCards","setVisibleCards","tagsList","setTagsList","tagsSet","reduce","acc","cardRows","length","map","cardTags","title","add","Set","values","value","push","label","setSearchState","event","target","openModal","afterOpenModal","subtitle","style","color","closeModal","renderTagsFilter","width","params","filterSearchResults","key","filteredCardsMock","cardMock","rest","console","log","modifiedCardRows","filter","cardTitle","cardDesc","cardVersion","includes","modifiedMock"],"sources":["/Users/rkhanna/Desktop/react-codesandbox/src/Dashboard.js"],"sourcesContent":["import \"./styles.scss\";\nimport Modal from \"react-modal\";\nimport AddCard from \"./AddCard\";\nimport React, { useEffect, useState } from \"react\";\nimport { customStyles } from \"./Configs\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { cardsMock } from \"./Configs\";\nimport Cards from \"./Cards\";\n\n// const tagsList = [{ label: \"iOS\" }, { label: \"Android\" }, { label: \"Windows\" }];\n\nexport default function Dashboard() {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [searchVal, setSearchVal] = useState(\"\");\n  const [visibleCards, setVisibleCards] = useState(cardsMock);\n  const [tagsList, setTagsList] = useState([]);\n\n  useEffect(() => {\n    const tagsSet = cardsMock.reduce((acc, { cardRows }) => {\n      cardRows &&\n        cardRows.length > 0 &&\n        cardRows.map(({ cardTags }) =>\n          cardTags.map(({ title }) => acc.add(title))\n        );\n\n      return acc;\n    }, new Set());\n\n    const tagsList = [];\n\n    for (let value of tagsSet.values()) {\n      tagsList.push({ label: value });\n    }\n\n    setTagsList(tagsList);\n  }, [cardsMock]);\n\n  const setSearchState = (event) => {\n    setSearchVal(event.target.value);\n  };\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const renderTagsFilter = () => {\n    return (\n      <Autocomplete\n        disablePortal\n        id=\"select-tag\"\n        options={tagsList}\n        sx={{ width: 100 }}\n        renderInput={(params) => <TextField {...params} label=\"Tags\" />}\n      />\n    );\n  };\n\n  const filterSearchResults = (event) => {\n    if (event.key === \"Enter\" && searchVal) {\n      const filteredCardsMock = cardsMock.map((cardMock) => {\n        const { cardRows, ...rest } = cardMock;\n        console.log(\"cardMock :\", cardMock);\n        console.log(\"cardRows :\", cardRows);\n\n        const modifiedCardRows =\n          cardRows && cardRows.length > 0\n            ? cardRows.filter(\n                ({ cardTitle, cardDesc, cardVersion }) =>\n                  cardTitle.includes(searchVal) ||\n                  cardDesc.includes(searchVal) ||\n                  cardVersion.includes(searchVal)\n              )\n            : cardRows;\n\n        let modifiedMock = { ...rest, cardRows: modifiedCardRows };\n        return modifiedMock;\n      });\n\n      console.log(\"filteredCardsMock :\", filteredCardsMock);\n\n      setVisibleCards(filteredCardsMock);\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Kanban Board</h1>\n      <div className=\"search-tags-container\">\n        <div className=\"search-wrapper\">\n          <input\n            placeholder=\"search this board\"\n            name=\"search\"\n            value={searchVal}\n            onKeyDown={filterSearchResults}\n            onChange={setSearchState}\n            o\n            className=\"search-input\"\n          ></input>\n          <i className=\"fa fa-search search-icon\" aria-hidden=\"true\"></i>\n        </div>\n        {renderTagsFilter()}\n      </div>\n      <div className=\"cards-container\">\n        <Cards cardsMock={visibleCards}></Cards>\n      </div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <AddCard></AddCard>\n      </Modal>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}