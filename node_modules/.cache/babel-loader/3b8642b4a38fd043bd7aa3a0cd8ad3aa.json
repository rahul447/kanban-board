{"ast":null,"code":"import _slicedToArray from \"/Users/rkhanna/Desktop/react-codesandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/rkhanna/Desktop/react-codesandbox/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.scss\";\nimport Modal from \"react-modal\";\nimport AddCard from \"./AddCard\";\nimport React from \"react\";\nimport { customStyles } from \"./Configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalIsOpen = _React$useState2[0],\n      setIsOpen = _React$useState2[1];\n\n  var fetchSearchResults = function fetchSearchResults(event) {\n    console.log(\"val : \", event.target.value);\n  };\n\n  var openModal = function openModal() {\n    setIsOpen(true);\n  };\n\n  var afterOpenModal = function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  };\n\n  var closeModal = function closeModal() {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kanban Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-tags-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"search this board\",\n        name: \"search\",\n        value: searchVal,\n        onKeyDown: fetchSearchResults,\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags\",\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onAfterOpen: afterOpenModal,\n      onRequestClose: closeModal,\n      style: customStyles,\n      contentLabel: \"Example Modal\",\n      children: /*#__PURE__*/_jsxDEV(AddCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"EOxo+0MXKxyCdUCTWpcfchJ0gFI=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Modal","AddCard","React","customStyles","Dashboard","useState","modalIsOpen","setIsOpen","fetchSearchResults","event","console","log","target","value","openModal","afterOpenModal","subtitle","style","color","closeModal","searchVal"],"sources":["/Users/rkhanna/Desktop/react-codesandbox/src/Dashboard.js"],"sourcesContent":["import \"./styles.scss\";\nimport Modal from \"react-modal\";\nimport AddCard from \"./AddCard\";\nimport React from \"react\";\nimport { customStyles } from \"./Configs\";\n\nexport default function Dashboard() {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  const fetchSearchResults = (event) => {\n    console.log(\"val : \", event.target.value);\n  };\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Kanban Board</h1>\n      <div className=\"search-tags-container\">\n        <input\n          placeholder=\"search this board\"\n          name=\"search\"\n          value={searchVal}\n          onKeyDown={fetchSearchResults}\n          className=\"search-input\"\n        ></input>\n        <div className=\"tags\">Tags</div>\n      </div>\n      <div className=\"cards-container\"></div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <AddCard></AddCard>\n      </Modal>\n    </div>\n  );\n}\n"],"mappings":";;;;;AAAA,OAAO,eAAP;AACA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,WAA7B;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAClC,sBAAiCF,KAAK,CAACG,QAAN,CAAe,KAAf,CAAjC;EAAA;EAAA,IAAOC,WAAP;EAAA,IAAoBC,SAApB;;EAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;IACpCC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAK,CAACG,MAAN,CAAaC,KAAnC;EACD,CAFD;;EAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;IACtBP,SAAS,CAAC,IAAD,CAAT;EACD,CAFD;;EAIA,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3B;IACAC,QAAQ,CAACC,KAAT,CAAeC,KAAf,GAAuB,MAAvB;EACD,CAHD;;EAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;IACvBZ,SAAS,CAAC,KAAD,CAAT;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACE;QACE,WAAW,EAAC,mBADd;QAEE,IAAI,EAAC,QAFP;QAGE,KAAK,EAAEa,SAHT;QAIE,SAAS,EAAEZ,kBAJb;QAKE,SAAS,EAAC;MALZ;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QAAK,SAAS,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAYE;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QAZF,eAaE,QAAC,KAAD;MACE,MAAM,EAAEF,WADV;MAEE,WAAW,EAAES,cAFf;MAGE,cAAc,EAAEI,UAHlB;MAIE,KAAK,EAAEhB,YAJT;MAKE,YAAY,EAAC,eALf;MAAA,uBAOE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA;IAPF;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;;GA7CuBC,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}