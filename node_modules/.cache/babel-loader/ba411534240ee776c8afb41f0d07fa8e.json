{"ast":null,"code":"import _objectSpread from \"/Users/rkhanna/Desktop/react-codesandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/rkhanna/Desktop/react-codesandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/rkhanna/Desktop/react-codesandbox/src/Cards.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport \"./styles.scss\";\nimport React, { useState } from \"react\";\nimport Card from \"./Card\";\nimport Modal from \"react-modal\";\nimport AddCard from \"./AddCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Cards = function Cards(_ref) {\n  _s();\n\n  var cardsMock = _ref.cardsMock;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalIsOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var renderCardRows = function renderCardRows(cardRows) {\n    return cardRows.map(function (card, key) {\n      return /*#__PURE__*/_jsxDEV(Card, _objectSpread({}, card), \"card-\".concat(key), false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, _this);\n    });\n  };\n\n  var openModal = function openModal() {\n    setIsOpen(true);\n  };\n\n  var afterOpenModal = function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  };\n\n  var closeModal = function closeModal() {\n    setIsOpen(false);\n  };\n\n  var renderAddCardButton = function renderAddCardButton(colorCode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plus-sign\",\n      style: {\n        border: \"1px dotted \".concat(colorCode),\n        padding: \"3rem\",\n        margin: \"0.5rem\"\n      },\n      onClick: openModal,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-thin fa-plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return cardsMock.map(function (_ref2) {\n    var cardsState = _ref2.cardsState,\n        cardRows = _ref2.cardRows,\n        colorCode = _ref2.colorCode;\n    console.log(\"cardsState, cardRows :\", cardsState, cardRows);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: colorCode,\n            color: \"white\",\n            padding: \".4rem\"\n          },\n          children: cardsState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this), cardRows && cardRows.length > 0 && renderCardRows(cardRows), renderAddCardButton(colorCode)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this), modalIsOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onAfterOpen: afterOpenModal,\n        onRequestClose: closeModal,\n        style: customStyles,\n        contentLabel: \"Example Modal\",\n        children: /*#__PURE__*/_jsxDEV(AddCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true);\n  });\n};\n\n_s(Cards, \"EOxo+0MXKxyCdUCTWpcfchJ0gFI=\");\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","Card","Modal","AddCard","Cards","cardsMock","modalIsOpen","setIsOpen","renderCardRows","cardRows","map","card","key","openModal","afterOpenModal","subtitle","style","color","closeModal","renderAddCardButton","colorCode","border","padding","margin","cardsState","console","log","backgroundColor","length","customStyles"],"sources":["/Users/rkhanna/Desktop/react-codesandbox/src/Cards.js"],"sourcesContent":["import \"./styles.scss\";\nimport React, { useState } from \"react\";\nimport Card from \"./Card\";\nimport Modal from \"react-modal\";\nimport AddCard from \"./AddCard\";\n\nconst Cards = ({ cardsMock }) => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const renderCardRows = (cardRows) => {\n    return cardRows.map((card, key) => {\n      return <Card key={`card-${key}`} {...card}></Card>;\n    });\n  };\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const renderAddCardButton = (colorCode) => {\n    return (\n      <div\n        className=\"plus-sign\"\n        style={{\n          border: `1px dotted ${colorCode}`,\n          padding: \"3rem\",\n          margin: \"0.5rem\",\n        }}\n        onClick={openModal}\n      >\n        <i className=\"fa-thin fa-plus\"></i>\n      </div>\n    );\n  };\n\n  return cardsMock.map(({ cardsState, cardRows, colorCode }) => {\n    console.log(\"cardsState, cardRows :\", cardsState, cardRows);\n    return (\n      <>\n        <div className=\"cards\">\n          <div\n            style={{\n              backgroundColor: colorCode,\n              color: \"white\",\n              padding: \".4rem\",\n            }}\n          >\n            {cardsState}\n          </div>\n          {cardRows && cardRows.length > 0 && renderCardRows(cardRows)}\n          {renderAddCardButton(colorCode)}\n        </div>\n        {modalIsOpen && (\n          <Modal\n            isOpen={modalIsOpen}\n            onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel=\"Example Modal\"\n          >\n            <AddCard></AddCard>\n          </Modal>\n        )}\n      </>\n    );\n  });\n};\n\nexport default Cards;\n"],"mappings":";;;;;;;AAAA,OAAO,eAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAmB;EAAA;;EAAA,IAAhBC,SAAgB,QAAhBA,SAAgB;;EAC/B,gBAAiCL,QAAQ,CAAC,KAAD,CAAzC;EAAA;EAAA,IAAOM,WAAP;EAAA,IAAoBC,SAApB;;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAc;IACnC,OAAOA,QAAQ,CAACC,GAAT,CAAa,UAACC,IAAD,EAAOC,GAAP,EAAe;MACjC,oBAAO,QAAC,IAAD,oBAA8BD,IAA9B,kBAAmBC,GAAnB;QAAA;QAAA;QAAA;MAAA,SAAP;IACD,CAFM,CAAP;EAGD,CAJD;;EAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;IACtBN,SAAS,CAAC,IAAD,CAAT;EACD,CAFD;;EAIA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3B;IACAC,QAAQ,CAACC,KAAT,CAAeC,KAAf,GAAuB,MAAvB;EACD,CAHD;;EAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;IACvBX,SAAS,CAAC,KAAD,CAAT;EACD,CAFD;;EAIA,IAAMY,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,SAAD,EAAe;IACzC,oBACE;MACE,SAAS,EAAC,WADZ;MAEE,KAAK,EAAE;QACLC,MAAM,uBAAgBD,SAAhB,CADD;QAELE,OAAO,EAAE,MAFJ;QAGLC,MAAM,EAAE;MAHH,CAFT;MAOE,OAAO,EAAEV,SAPX;MAAA,uBASE;QAAG,SAAS,EAAC;MAAb;QAAA;QAAA;QAAA;MAAA;IATF;MAAA;MAAA;MAAA;IAAA,SADF;EAaD,CAdD;;EAgBA,OAAOR,SAAS,CAACK,GAAV,CAAc,iBAAyC;IAAA,IAAtCc,UAAsC,SAAtCA,UAAsC;IAAA,IAA1Bf,QAA0B,SAA1BA,QAA0B;IAAA,IAAhBW,SAAgB,SAAhBA,SAAgB;IAC5DK,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,UAAtC,EAAkDf,QAAlD;IACA,oBACE;MAAA,wBACE;QAAK,SAAS,EAAC,OAAf;QAAA,wBACE;UACE,KAAK,EAAE;YACLkB,eAAe,EAAEP,SADZ;YAELH,KAAK,EAAE,OAFF;YAGLK,OAAO,EAAE;UAHJ,CADT;UAAA,UAOGE;QAPH;UAAA;UAAA;UAAA;QAAA,SADF,EAUGf,QAAQ,IAAIA,QAAQ,CAACmB,MAAT,GAAkB,CAA9B,IAAmCpB,cAAc,CAACC,QAAD,CAVpD,EAWGU,mBAAmB,CAACC,SAAD,CAXtB;MAAA;QAAA;QAAA;QAAA;MAAA,SADF,EAcGd,WAAW,iBACV,QAAC,KAAD;QACE,MAAM,EAAEA,WADV;QAEE,WAAW,EAAEQ,cAFf;QAGE,cAAc,EAAEI,UAHlB;QAIE,KAAK,EAAEW,YAJT;QAKE,YAAY,EAAC,eALf;QAAA,uBAOE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA;MAPF;QAAA;QAAA;QAAA;MAAA,SAfJ;IAAA,gBADF;EA4BD,CA9BM,CAAP;AA+BD,CArED;;GAAMzB,K;;KAAAA,K;AAuEN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}